pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS_ID = 'jagadhish3-docker'
        DOCKERHUB_USERNAME = 'jagadhish3'
        IMAGE_NAME = 'movie-recommender'
        GITHUB_REPO_URL = 'https://github.com/Jagadhish3/Movies.git'
        // Windows-specific settings
        DOCKER_HOST = "tcp://localhost:2375"  // Required for Windows Docker Desktop
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout Code') {
            steps {
                git branch: 'main', 
                url: "${GITHUB_REPO_URL}",
                poll: true
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Always use --no-cache during CI builds
                    docker.build("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${env.BUILD_ID}")
                    
                    // Also tag as latest
                    docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${env.BUILD_ID}").inside {
                        bat "docker tag ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${env.BUILD_ID} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest"
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS_ID}") {
                        // Push both versioned and latest tags
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${env.BUILD_ID}").push()
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest").push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    bat '''
                        docker stop movie-app || exit 0
                        docker rm movie-app || exit 0
                        docker run -d -p 5000:5000 --name movie-app ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images to save space
            bat "docker rmi ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${env.BUILD_ID} || exit 0"
            cleanWs()
        }
    }
}